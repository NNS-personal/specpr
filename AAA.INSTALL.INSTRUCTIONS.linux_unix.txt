         INSTALLATION INSTRUCTIONS for SPECPR:

BASIC INSTRUCTIONS
------------------
1. Create specpr account (optional).
   Make a user account on your system with the name of specpr.  This is
   to have a place to send bug reports to.  (alternativly, make a mail
   alias to one appropriate person)


2. (optional)
   Create the directory 'src' in a location of your designation where
   you want to put the source code if it does not exist.
   Recommend /opt or /usr.  This will be referred to in the following
   basic instructions as SRCDIR.

   e.g.:
         cd /opt/src/local
      or
         cd /src/local

   You will put the specpr tar file in that directory to untar it.

3. (Optional)
   In the root directory, create a symbolic link file named 'src'
   pointing to SRCDIR directory.

   example:
            ln -s /opt/src /src

4. From SRCDIR, create a directory named 'local' (i.e. /src/local).
   This will be referred to in the following instructions as LOCALDIR.

5. Place the specpr tar file in LOCALDIR and uncompress and untar as
   necessary.  This will create the 'specpr' directory in LOCALDIR
   (i.e. /src/local/specpr) and will be subsequently referred as SPDIR
   or $SPECPR:

	uncompress specpr.tar.Z (if required)
	tar xf specpr.tar

   NOTE: SPDIR will be the environment variable SPECPR in the config file.

6. (Optional if you do not have ratfor installed)
   From SPDIR, go to the ratfor77 directory and perform the 
   following to install the ratfor utility required to translate
   rational fortran source to fortran77 for compile by f77.  If you
   have f90, install the 'ratfor90' perl script in an appropriate
   directory for execution (i.e. /usr/local/bin):

        cd ratfor77
	make
	make install

   Note: in ubuntu and mint linux installations, ratfor is in
   the synamtic package manager.

6. From SPDIR, go to the sspp directory and peform the following
   to install the sspp (source pre-processor) utility used in the
   build of specpr. 

        cd src.sspp
	make
	make install

7. From SPDIR, go to the utility directory and copy the scripts
    to your local executable path.  We will assume that is
    /usr/local/bin

    cd utility
    cp check_env /usr/local/bin
    cp specpr    /usr/local/bin
    cp sp_spool  /usr/local/bin
    ln /usr/local/bin/specpr /usr/local/bin/dspecpr

    cp specprhelp /usr/local/bin
    cp specprnt   /usr/local/bin
    cp spedit     /usr/local/bin
    cp spfind     /usr/local/bin

    cd /usr/local/bin/
        ln specpr dspecpr
        ln specpr radtran
        ln specpr dradtran


    NOTE: the sp_spool command is the plot spooling script and is
    called from src.specpr/newplot/bldplt.r
    If you want to install sp_spool in a location other than
    /usr/local/bin, you must modify newplot.r or create a symbolic
    link to it.

8. IMPORTANT: To build specpr, your environment variables should be 
   set accordingly from the config directory:

        cd SPDIR/config  (e.g. cd /src/local/specpr/config )

    Select the appropriate file and edit the setting for your system.
    (you may want to make a caopy and edit the copy)

     Check that the assigned variables are correct. 
         e.g. ratfor or ratfor77 depending on which you installed.

     There are environments set up for tcsh/csh shells and  bourne/bash shells:

	for csh - source the appropriate for for your enviornment 
	for sh  - execute . shenv.<enviornment>

    e.g. for a 64-bit ubuntu linux system using tcsh or csh:

        cp cshenv.linux64.gfortran cshenv.linux64.mysystem
        source cshenv.linux64.mysystem

    run the command env to see what variables are set:

        env

    If running the cshell, csh or tcsh, execute from the commane line:
        rehash

    Note: you can add a line in /etc/csh.cshrc to source the appropriate file
    or equivalent file for your shell.

9. From SPDIR, go to the src.lib directory.  Perform the following -
   this will create the sputil.a library and install it in SPDIR/lib: 

        cd $SPECPR/src.lib 
	make

10. (Optional.) Next cd to the src.specpr/logo directory.
    Edit the file "set.logo" for your site identification.
    cd back to src.specpr directory.

    The "set.logo" file is an ascii text file and can be viewed
    and modified with any text editor if you want a banner
    customized for you installation.

        cd $SPECPR/src.specpr/ogo

              edit the file set.logo

              (for example:)
		vi set.logo

        cd ..


11. From SPDIR, go to the src.specpr directory.  Perform the following -
   this will create the pspecpr utility then install the utility and
   it associated scripts (specpr and dspecpr) in /usr/local/bin.  Note
   that this process creates the SPDIR/lib/specpr.a library used in 
   the creation of other utilities/programs (i.e. radtran, tetracorder,
   etc):

        cd $SPECPR/src.specpr
	make
	make install

   Notes:
   Ubuntu: you will need gfortran and X11 libraries installed.
   On one machine we had to install the packages libx11-6 and libx11-dev

12. From SPDIR, create/install (make, make install) other utilites as
   optionally needed from some of the following example directories -
   see DETAILED INSTRUCTIONS for further information:

     cd $SPECPR  then cd to each directory and type 
            on some directories, you will also need to
                 cd SRC within thatdirectory.
            ls -l   # check to see if need to cd SRC
            make  
            make install
        
        src.sp_stamp    # puts header stamp on specpr files for davinci
        
        src.spprint/SRC # prints specpr file contents
        
        src.radtran/SRC # radiative transfer models
        
        src.spfeatures/SRC  # spfeatures database query

        src.fstospecpr  # ASD Field Spectrometer (original format) to specpr format
        
        src.datatran    # data translation to/from specpr format:
                        # SRC.cgastosp   code for CGAS from IRTF to specptr.
                        # SRC.asciitosp  converts ascii keyword files to specpr
                        # SRC.sptoascii  converts specpr files to ascii keywords

13. To make plots from specpr, you must compile the plotting packages.

    Specpr plots create a set of text and vector files and then the
    sp_plot script calls the appropriate plotting package for a
    particular device.  Software directories for the following devices exist:

     src.tgifdaemon    # TGIF .obj file output

     src.psplotdaemon  # Postscript output

     src.hpgl          # HP graphics language output
     src.hppen         # HP pen plotters (HPGL output)
     src.laserjet      # HP laserjet printers (HPGL)  (no makefile)

    The above packages are unsupported although we currently use TGIF and
    postscript output on numerous linux/unix machines.

    Create the spool directories:

       mkdir /usr/spool/gplot
       chmod 777 /usr/spool/gplot

       mkdir /usr/log/                    # may already exist
       cp /dev/null /usr/log/plot.log     # log file
       chmod 666 /usr/log/plot.log        # make log file writeable for all

    If you have trouble compiling src.hpgl or src.hppen, read the
    README files in those directories.
    You may need to  make the strings library (not need on
    BSD Unix machines).  Go to the src.hpgl (for hpgl printers, the new
    default for specpr plotting), or src.hppen (for pen plotters) directory
    and make the daemon program.  You will have to select machine
    dependent compile to select RS232 or HPIB plotters in the src.hppen
    directory.  That can be done on the make command line so there should be
    no files to edit.  Copy the executable (hpdaemon) to:
    
           /usr/lib/hpgldaemon (from src.hpgl) and/or
           /usr/lib/hpdaemon   (from src.hppen)

    Specpr puts temporary plot files into a special directory, so make the 
    /usr/spool/gplot directory (or a symbolic link to a directory
    appropriate for your system).

    Some environment variables that the plotting scripts use:

    MY_PS_PLOTTER    postscript printer
    MY_HPGL_PLOTTER  HPGL printer (like laserjet 4 or 5)

    For HPGL printers, you can customize your plots using environment
    variables.  The vartiables and their defaults are:

    p0=${HPGL_PEN0WIDTH:-0.30}   # pen 0 width in mm
    p1=${HPGL_PEN1WIDTH:-0.60}   # pen 1 width in mm
    p2=${HPGL_PEN2WIDTH:-0.40}   # pen 2 width in mm
    p3=${HPGL_PEN3WIDTH:-0.60}   # pen 3 width in mm
    p4=${HPGL_PEN4WIDTH:-0.80}   # pen 4 width in mm
    p5=${HPGL_PEN5WIDTH:-1.00}   # pen 5 width in mm
    p6=${HPGL_PEN6WIDTH:-0.50}   # pen 6 width in mm
    p7=${HPGL_PEN7WIDTH:-0.70}   # pen 7 width in mm
    
    # pen colors
    # color values are 0 to 255:   0,  0,  0 = black
    #                            255,255,255 = white
    #                            255,  0,  0 = red
    #                              0,255,  0 = green
    #                              0,  0,255 = blue
    
    pc0=${HPGL_PEN0COLOR:-0,0,0}   # pen 0 color, default = black
    pc1=${HPGL_PEN1COLOR:-0,0,0}   # pen 1 color, default = black
    pc2=${HPGL_PEN2COLOR:-0,0,0}   # pen 2 color, default = black
    pc3=${HPGL_PEN3COLOR:-0,0,0}   # pen 3 color, default = black
    pc4=${HPGL_PEN4COLOR:-0,0,0}   # pen 4 color, default = black
    pc5=${HPGL_PEN5COLOR:-0,0,0}   # pen 5 color, default = black
    pc6=${HPGL_PEN6COLOR:-0,0,0}   # pen 6 color, default = black
    pc7=${HPGL_PEN7COLOR:-0,0,0}   # pen 7 color, default = black
    
    (the above are in the script: sphpglplotinit in the utility
    directory.)



    As noted above, the spool command must be customized.  Specpr
    creates vector and text files in the /usr/spool/gplot directory
    which hpdaemon then uses to build the plots.  The spool script is
    run by specpr.  The spool script is the interface to the line
    printer spooler.  The hpplotdaemon is run by the line printer spooler
    so that multiple users can plot to the plotter at the "same" (meaning
    interleaved) time.  Because installation of line printer spoolers is
    site dependent, that is not described here.  A complete set of
    copies of the speclab (system V) setup scripts, plotq
    enabling/disabling scripts, system V lp model scripts can be found
    in the src.hppen/SPOOLERS directory.
    
14.  Make the directory /usr/msgs.  The tar installation created a
     directory msgs at the same level as the specpr directory.  In that
     directory is a file called "specnotes".  Copy it to
     /usr/msgs/specnotes

     or as root:

     mkdir /usr/local/msgs
     ln -s /usr/local/msgs/ /usr/msgs
     cd /usr/local/msgs/
     cp /dev/null dradnotes
     cp /dev/null dspecnotes
     cp /dev/null radnotes
     cp /dev/null specnotes

15.  Tetracorder.
     To compile tetracorder, go to the tetracorder directory
     and follow the  AAA.INSTALL.INSTRUCTIONS* file located in
     that directory.

     Specpr must be compiled before tetracorder, as tetracorder
     uses many specpr subroutines.


DONE





ADDING NEW GRAPHICS SUPPORT:
----------------------------
    Adding a new graphics device is relatively easy.  For example,
adding plot 10 capability took only two hours.  All the routines
that need modification are in the directory hpgraph.  If device
specific subroutines must be called 
they should be done as a compile dependent
option.  Basically, the device specific routines should be in the
code as comments with keywords (like we now have HPUX, NONHPUX, DEC,
NONDEC; we could use GKS for GKS and the ratfor would look like:
#GKS call xxx(a,b)
An example of this method is in free/ihchar.r
Also look at the makefile.
    When adding a new graphics device, choose a number (see the
manual for those already in use) that can be used to select that
device.  The number should be < 99 for graphics devices.
    Right now, graphics assumes a 390 high by 512 wide screen.  It
has not been made more general because we wanted to optimize the
speed of graphics output as much as possible.  This could be changed
now (but it involves a lot of code) because new machines are very
fast, and I/O to the graphics is usually the bottleneck.


MACHINE SPECIFIC PROBLEMS:
--------------------------
Byte swap problems:  Input is compared to alphanumeric characters, and
internally some machines store them in different positions.  (This was
originally the case between suns+hp's and vaxes).  If your input seems
not to be recognized, then change the ihchar.r routine in the free
directory.  Examine the two lines commented DEC and NONDEC.  This is
just a byte swap difference.  You might hand compile this routine with
the other line selected and see if that is the problem.  If it is, then
binary data will be a problem too (spectral libraries from USGS speclab)
specpr files are in IEEE format as with Suns, HPs.  We are working on a
Linux port and will address the byte swap issue on PCs during this port
(fall/1999).


If you have any questions, call or send mail

Roger N. Clark
U.S. Geological Survey, MS 964
Box 25046 Federal Center
Denver, CO 80225-0046

(303) 236-1332
rclark@usgs.gov

http://speclab.cr.usgs.gov


